@model ERestaurant.Models.FoodMaster
@using ERestaurant.Util;
@{
    ViewBag.Title = "CreateFood";
}

<h2>CreateFood</h2>

@using (Html.BeginForm("CreateFood", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true)

         <div class="line">
        @Html.DevExpress().LabelFor(model => model.FoodName, CommonDemoHelper.LabelSettingsMethod).GetHtml()
        @Html.DevExpress().TextBoxFor(model => model.FoodName, CommonDemoHelper.TextBoxSettingsMethod).GetHtml()
    </div>

       <div class="line">
        @Html.DevExpress().LabelFor(model => model.FoodDescription, CommonDemoHelper.LabelSettingsMethod).GetHtml()
        @Html.DevExpress().TextBoxFor(model => model.FoodDescription, CommonDemoHelper.TextBoxSettingsMethod).GetHtml()
    </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price)
                @Html.ValidationMessageFor(model => model.Price)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Image, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Image, new { @type="file"})
                @Html.ValidationMessageFor(model => model.Image)
            </div>
        </div>
         <div class="line">
        @Html.DevExpress().LabelFor(model => model.FoodCatID, CommonDemoHelper.LabelSettingsMethod).GetHtml()
        @Html.DevExpress().ComboBoxFor(
        model => model.FoodCatID,
        settings =>
        {
            settings.Name = "FoodCatID";
            settings.Width = Unit.Pixel(250);
            settings.ShowModelErrors = true;
            settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.StartsWith;
            settings.Properties.DropDownStyle = DropDownStyle.DropDown;
            settings.ControlStyle.CssClass = "editor";
            settings.Properties.TextField = "FoodCatName";
            settings.Properties.ValueField = "FoodCatID";
            settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithText;
        }
    ).BindList(ViewBag.FoodCategory).GetHtml()
    </div>
      
        <div class="form-group">
            @Html.LabelFor(model => model.FinishingTime, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FinishingTime)
                @Html.ValidationMessageFor(model => model.FinishingTime)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Food")
</div>
