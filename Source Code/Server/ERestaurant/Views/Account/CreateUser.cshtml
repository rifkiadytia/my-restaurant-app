z@{ Layout = "~/Views/Shared/_lightLayout.cshtml"; }
@model ERestaurant.Models.RegisterModel

<div class="accountHeader">
    <h2>
        Create a New Account</h2>
    <p>Use the form below to create a new account.</p>
    </div>

@using (Html.BeginForm()) {
        @Html.AntiForgeryToken()
    
    @Html.DevExpress().Label(settings => {
        settings.Name = "UserNameLabel";
        settings.Text = "User Name";
        settings.AssociatedControlName = "UserName";
    }).GetHtml()
    <div class="form-field">
        @Html.EditorFor(m => m.UserName)
        @Html.ValidationMessageFor(m => m.UserName)
    </div>
    @Html.DevExpress().Label(settings => {
        settings.Name = "EmailLabel";
        settings.Text = "Email";
        settings.AssociatedControlName = "Email";
    }).GetHtml()
    <div class="form-field">
        @Html.EditorFor(m => m.Email)
        @Html.ValidationMessageFor(m => m.Email)
    </div>
    @Html.DevExpress().Label(settings => {
        settings.Name = "PasswordLabel";
        settings.Text = "Password";
        settings.AssociatedControlName = "Password";
    }).GetHtml()
    <div class="form-field">
        @Html.EditorFor(m => m.Password)
        @Html.ValidationMessageFor(m => m.Password)
    </div>
    @Html.DevExpress().Label(settings => {
        settings.Name = "ConfirmPasswordLabel";
        settings.Text = "Confirm Password";
        settings.AssociatedControlName = "ConfirmPassword";
    }).GetHtml()
    <div class="form-field">
        @Html.EditorFor(m => m.ConfirmPassword)
        @Html.ValidationMessageFor(m => m.ConfirmPassword)
    </div>
    <div class="uploadContainer">
        <label>Select Image:</label>
        @Html.DevExpress().UploadControl(
            settings => {
                settings.Name = "ucCallbacks";
                settings.CallbackRouteValues = new { Controller = "UploadControl", Action = "CallbacksImageUpload" };
                settings.ControlStyle.CssClass = "editorArea";

                settings.ShowProgressPanel = true;
                settings.ValidationSettings.Assign(UploadControlDemosHelper.ValidationSettings);

                settings.ClientSideEvents.FileUploadComplete = "function(s,e){ if(e.callbackData != '') $('#previewImage').attr('src', e.callbackData); }";
            }).GetHtml()
        <label>&nbsp;</label>
        <div class="editorArea text">
            Allowed image types: jpeg, gif<br />
            Maximum file size: 20MB
        </div>
        <label>&nbsp;</label>
        <div class="editorArea">
            <input type="button" value="Upload" onclick="ucCallbacks.Upload()" />
        </div>
    </div>
    <div class="imageContainer">
        <img alt="" id="previewImage" src="@Url.Content("~/Content/UploadControl/ImagePreview.gif")" />
    </div>
     @Html.DevExpress().Button(settings => {
        settings.Name = "Button";
        settings.Text = "Register";
        settings.UseSubmitBehavior = true;
     }).GetHtml()
}