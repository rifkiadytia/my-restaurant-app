@model ERestaurant.Models.ChangePasswordModel
@{ Layout = "~/Views/Shared/_lightLayout.cshtml"; }

<div class="accountHeader">
    <h2>
        Change Password</h2>
    <p>Use the form below to change your password.</p>
    </div>
@using (Html.BeginForm()) {
        @Html.AntiForgeryToken()
        @Html.DevExpress().Label(grSettings => {
       grSettings.Name = "UserNameLabel";
       grSettings.Text = "UserName";
        grSettings.AssociatedControlName = "UserName";
    }).GetHtml()
    <div class="form-field">
        @Html.EditorFor(m => m.UserName)
        @Html.ValidationMessageFor(m => m.UserName)
    </div>
        @Html.DevExpress().Label(grSettings => {
        grSettings.Name = "OldPasswordLabel";
        grSettings.Text = "Old Password";
        grSettings.AssociatedControlName = "OldPassword";
    }).GetHtml()
    <div class="form-field">
        @Html.EditorFor(m => m.OldPassword)
        @Html.ValidationMessageFor(m => m.OldPassword)
    </div>
                
    @Html.DevExpress().Label(grSettings => {
        grSettings.Name = "NewPasswordLabel";
        grSettings.Text = "New Password";
        grSettings.AssociatedControlName = "NewPassword";
    }).GetHtml()
    <div class="form-field">
        @Html.EditorFor(m => m.NewPassword)
        @Html.ValidationMessageFor(m => m.NewPassword)
    </div>
                
    @Html.DevExpress().Label(grSettings => {
        grSettings.Name = "ConfirmPasswordLabel";
        grSettings.Text = "Confirm Password";
        grSettings.AssociatedControlName = "ConfirmPassword";
    }).GetHtml()
    <div class="editor-field">
        @Html.EditorFor(m => m.ConfirmPassword)
        @Html.ValidationMessageFor(m => m.ConfirmPassword)
    </div>
    
    @Html.DevExpress().Button(grSettings => {
        grSettings.Name = "Button";
        grSettings.Text = "Change Password";
        grSettings.UseSubmitBehavior = true;
    }).GetHtml()
}